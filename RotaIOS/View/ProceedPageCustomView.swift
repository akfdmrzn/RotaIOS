//
//  ProceedCustomView.swift
//  Rota
//
//  Created by Yasin Dalkilic on 25.04.2021.
//


import Foundation
import UIKit

protocol ProceedPageDelegate {
    func proceedPage(isSuccsess : Bool)
}

class ProceedPageCustomView : UIView {
    @IBOutlet var viewMainView: UIView!
    @IBOutlet weak var viewShopDateMainTextView: MainTextCustomView!
    @IBOutlet weak var viewRoomMainTextView: MainTextCustomView!
    @IBOutlet weak var viewNotesMainTextView: MainTextCustomView!
    @IBOutlet weak var viewPickUpTimeMainTextView: MainTextCustomView!
    @IBOutlet weak var sendButton: UIButton!
    var dateString = ""
    var timeString = ""
    var proceedPageDelegate : ProceedPageDelegate?
    var paxFilteredList : [String] = []
    @IBOutlet weak var buttonPrintVoucher: UIButton!
    var datePicker: UIDatePicker = {
        let datePicker = UIDatePicker()
        datePicker.datePickerMode = .date
        if #available(iOS 13.4, *) {
            datePicker.preferredDatePickerStyle = .wheels
        } else {
            // Fallback on earlier versions
        }
        return datePicker
    }()
    var timePicker: UIDatePicker = {
        let timePicker = UIDatePicker()
        timePicker.datePickerMode = .time
        if #available(iOS 13.4, *) {
            timePicker.preferredDatePickerStyle = .wheels
        } else {
            // Fallback on earlier versions
        }
        return timePicker
    }()
    let dateToolBar = UIToolbar()
    let timeToolBar = UIToolbar()
    var paxListinProceedPage : [Paxes] = []
    var stepsListinProceedPage : [Steps] = []
    var adultCountinProceedPage = 0
    var childCountinProceedPage = 0
    var infantCountinProceedPage = 0
    var printString = ""
    var printList : [SendDataPrint] = []
    var connectedAccessories : [EAAccessory] = []
    var addedNumber = 1000
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        commonInit()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        commonInit()
    }
    
    func commonInit() {
        Bundle.main.loadNibNamed(String(describing: ProceedPageCustomView.self), owner: self, options: nil)
        self.viewMainView.addCustomContainerView(self)
        self.sendButton.isEnabled = true
        self.viewMainView.backgroundColor = UIColor.mainViewColor
        
        self.viewShopDateMainTextView.headerLAbel.text = "Shop Date"
        self.viewPickUpTimeMainTextView.headerLAbel.text = "Pick Up Time"
        self.viewRoomMainTextView.headerLAbel.text = "Room"
        self.viewNotesMainTextView.headerLAbel.text = "Notes"
        self.viewShopDateMainTextView.mainLabel.isHidden = true
        self.viewShopDateMainTextView.mainText.isHidden = false
        self.viewShopDateMainTextView.imageMainText.isHidden = true
        self.viewPickUpTimeMainTextView.mainLabel.isHidden = true
        self.viewPickUpTimeMainTextView.mainText.isHidden = false
        self.viewPickUpTimeMainTextView.imageMainText.isHidden = true
        self.viewRoomMainTextView.mainLabel.isHidden = true
        self.viewRoomMainTextView.mainText.isHidden = false
        self.viewRoomMainTextView.imageMainText.isHidden = true
        self.viewNotesMainTextView.mainLabel.isHidden = true
        self.viewNotesMainTextView.mainText.isHidden = false
        self.viewNotesMainTextView.imageMainText.isHidden = true
        
        self.buttonColor(isEnable: true, button: self.sendButton)
        self.buttonColor(isEnable: false, button: self.buttonPrintVoucher)
        
        self.createDatePicker()
        self.createTimePicker()
    }
  
    
    @IBAction func sendButtonClicked(_ sender: Any) {
        print(paxListinProceedPage)
        print(stepsListinProceedPage)
        
        let saveForMobileRequestModel = GetSaveForMobileRequestList.init(iND_CHLMAXAGE: NSNull() , iND_NOTE: self.viewNotesMainTextView.mainText.text ?? NSNull(), iND_VOUCHER: NSNull(), iND_SHOPDATE: self.dateString , iND_GUIDEREF: userDefaultsData.getGuideId() , iND_MARKETGROUPREF: userDefaultsData.getMarketGruopId() , iND_MARKETREF: userDefaultsData.getMarketId() , iND_AREAREF: userDefaultsData.getHotelArea() , iND_HOTELREF: userDefaultsData.getHotelId() , iND_SHOPPICKUPTIME: self.timeString,  strPaxes: self.paxListinProceedPage.toJSONString() ?? "" , strSteps: self.stepsListinProceedPage.toJSONString() ?? "")
       
        if dateString.isEmpty == false && self.paxListinProceedPage.isEmpty == false && self.stepsListinProceedPage.isEmpty == false {
            NetworkManager.sendRequest(url: NetworkManager.BASEURL, endPoint: .GetSaveForMobile, requestModel: saveForMobileRequestModel ) { (response: GetSaveForMobileResponseList) in
                if response.isSuccesful ?? false{
                    if let topVC = UIApplication.getTopViewController() {
                        let alert = UIAlertController(title: "SUCCESS", message: response.message, preferredStyle: UIAlertController.Style.alert)
                        alert.addAction(UIAlertAction(title: "OK", style: UIAlertAction.Style.default, handler: nil))
                        topVC.present(alert, animated: true, completion: nil)
                    }
                    self.sendButton.backgroundColor = UIColor.clear
                    self.sendButton.layer.borderWidth = 1
                    self.sendButton.layer.borderColor = UIColor.green.cgColor
                    self.sendButton.layer.cornerRadius = 10
                    self.sendButton.isEnabled = false
                    self.proceedPageDelegate?.proceedPage(isSuccsess: true)
                    userDefaultsData.saveHotelId(hotelId: 0)
                    userDefaultsData.saveMarketId(marketId: 0)
                    print(response)
                    self.sendButton.isEnabled = false
                    self.printList.append(SendDataPrint.init(tourName: "", paxInfo: "", voucher: "", tourDate: "", transTourist: "", hotelName: "", date: "", room: "", paxName: "", operatorName: "", resNo: "", total: "", discount: "", netTotal: "", cash: "", card: "", guideInfoNumber: "", pickUpTime: "", extras: "", transfers: "", tourPax: "", voucherNoTop: "", paymentDetail: "", steps: ""))
                    self.buttonColor(isEnable: false, button: self.sendButton)
                    self.buttonColor(isEnable: true, button: self.buttonPrintVoucher)
                }else{
                    if let topVC = UIApplication.getTopViewController() {
                        let alert = UIAlertController(title: "Error", message: response.exceptionMessage, preferredStyle: UIAlertController.Style.alert)
                        alert.addAction(UIAlertAction(title: "OK", style: UIAlertAction.Style.default, handler: nil))
                        topVC.present(alert, animated: true, completion: nil)
                        self.proceedPageDelegate?.proceedPage(isSuccsess: false)
                    }
                }
            }
        }else {
            if let topVC = UIApplication.getTopViewController() {
                let alert = UIAlertController(title: "Error", message: "Please Insert Paxes/Steps/ShopDate", preferredStyle: UIAlertController.Style.alert)
                alert.addAction(UIAlertAction(title: "OK", style: UIAlertAction.Style.default, handler: nil))
                topVC.present(alert, animated: true, completion: nil)
                self.proceedPageDelegate?.proceedPage(isSuccsess: false)
            }
        }
    }
    
    @IBAction func printButtonTapped(_ sender: Any) {
        if self.printList.count > 0 && self.connectedAccessories.count > 0{
            self.connectEaAccessory(eaAccessory: self.connectedAccessories[0])
        }else{
            let alert = UIAlertController.init(title: "Warning", message: "Please send data and Connect Zebra device", preferredStyle: UIAlertController.Style.alert)
            alert.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
            if let topVC = UIApplication.getTopViewController() {
                topVC.present(alert, animated: true, completion: nil)
            }
        }
     if let topVC = UIApplication.getTopViewController() {
            topVC.otiPushViewController(viewController: MainPAgeViewController())
        }
    }
    func createDatePicker() {
        self.viewShopDateMainTextView.mainText.textAlignment = .left
        let doneButton = UIBarButtonItem(barButtonSystemItem: .done, target: nil, action: #selector(datePickerDonePressed))
        self.dateToolBar.setItems([doneButton], animated: true)
        self.dateToolBar.sizeToFit()
        self.viewShopDateMainTextView.mainText.inputAccessoryView = dateToolBar
        self.viewShopDateMainTextView.mainText.inputView = datePicker
        self.datePicker.datePickerMode = .date
    }
    
    @objc func datePickerDonePressed() {
        let formatter = DateFormatter()
        formatter.dateStyle = .medium
        formatter.timeStyle = .none
        formatter.dateFormat = "MM-dd-yyyy"
        print(formatter.string(from: datePicker.date))
        self.dateString = formatter.string(from: datePicker.date)
        formatter.dateFormat = "dd-MM-yyyy"
        self.viewShopDateMainTextView.mainText.text = "\(formatter.string(from: datePicker.date))"
        self.viewMainView.endEditing(true)
    }
    
    func createTimePicker() {
        self.viewPickUpTimeMainTextView.mainText.textAlignment = .left
        let doneButton = UIBarButtonItem(barButtonSystemItem: .done, target: nil, action: #selector(timePickerDonePressed))
        self.timeToolBar.setItems([doneButton], animated: true)
        self.timeToolBar.sizeToFit()
        self.viewPickUpTimeMainTextView.mainText.inputAccessoryView = timeToolBar
        self.viewPickUpTimeMainTextView.mainText.inputView = timePicker
        self.timePicker.datePickerMode = .time
    }
    
    @objc func timePickerDonePressed() {
        let formatter = DateFormatter()
        formatter.dateStyle = .medium
        formatter.timeStyle = .medium
        formatter.dateFormat = "HH:mm"
        self.viewPickUpTimeMainTextView.mainText.text = "\(formatter.string(for: timePicker.date) ?? "12:00")"
        self.viewMainView.endEditing(true)
        print(formatter.string(from: timePicker.date))
        self.timeString = formatter.string(from: datePicker.date)
    }
}

extension ProceedPageCustomView {
 
    private func connectEaAccessory(eaAccessory : EAAccessory){
        if eaAccessory.modelNumber.hasPrefix("iMZ320"){

            //Note: Zebra SDK requires communication in background thread
            DispatchQueue.global(qos: .background).async {
                //Zebra SDK specific code -- Start
                var connection :  NSObjectProtocol & ZebraPrinterConnection //define variable that confronts to NSObjectProtocol & ZebraPrinterConnection
                connection = MfiBtPrinterConnection.init(serialNumber: eaAccessory.serialNumber)! //Call Zebra's SDK to init a BT Connection
                
                if connection.open(){
                    print ("Printer Connected")
                    do{
                        var printer : ZebraPrinter & NSObjectProtocol //define variable that confronts to NSObjectProtocol & ZebraPrinter
                        printer = try ZebraPrinterFactory.getInstance(connection)
                        
                        let printerLanguage = printer.getControlLanguage()
                        print ("Connected Printer uses the following language: \(printerLanguage)")
                        if printerLanguage == PRINTER_LANGUAGE_ZPL{
                            self.configureLabelSize(connection: connection)
                            self.sendZebraTestingString(connection: connection)
                        } else{
                            print ("Our program only support printer using ZPL language")
                        }
                        
                    }catch{
                        print ("Error occured: \(error.localizedDescription)")
                    }
                    
                }else{
                    print ("Failed to Connect to ZQ620 Printer")
                    let alert = UIAlertController.init(title: "Warning", message: "Please be sure connected to device", preferredStyle: UIAlertController.Style.alert)
                    alert.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
                    if let topVC = UIApplication.getTopViewController() {
                        topVC.present(alert, animated: true, completion: nil)
                    }
                }
                //Zebra SDK specific code -- End
            }
        }
    }
    
    private func sendStrToPrinter(_ strToSend: String, connection: ZebraPrinterConnection){
        let data = strToSend.data(using: .utf8)!
        var error : NSErrorPointer = nil
        connection.write(data, error: error)
    }
    private func configureLabelSize(connection: ZebraPrinterConnection){
        let strToSend = """
        ^XA
        ^PW408
        ^LT16
        ^XZ
        """
       // sendStrToPrinter(strToSend, connection: connection)
    }
    private func sendZebraTestingString(connection: ZebraPrinterConnection){
        var hotelNameFirstColumn = ""
        var hotelNameScondColumn = ""
        
        //strToSend it written in ZPL language
        let testingStr = "^XA^FO17,16^GB379,371,8^FS^FT65,255^A0N,135,134^FDTEST^FS^XZ"
      // sendStrToPrinter(testingStr, connection: connection)
        
        //The first
       /* let testingLabelStr = ""*/
        let odeonLabel = "^FO10,20^GFA,2425,2425,25,,:::00hKFE,007hJFE,:::::::::007gUF80JF3FFE,007LF81JFC3OFE1KF83IF807FFE0FFE,007LF01JF8007MF803IFE01IF803FFC07FE,007KFCI01FEJ03KFCI0IFCI03FC01FFC07FE,007KF8J07L07JF8I0IFK0FE01FFE03FE,007KFK03L01IFEJ07FEK07E00FFE03FE,007JFCS0IFCJ07FCK03F00IF03FE,007JF8S07FF8J07F8K01F807FF03FE,007JF8007EK0FF803FF007E07FI07E01F807FF03FE,007JF001FF80080FFE03FE03FFCFE001FF00F803FF03FE,007IFE001FF80780FFE01FC07JFC003FF80F001FF03FE,007IFC003FFC0781IF01F80KFC007FF80F001FF83FE,007IF8087FFC0781IF00F01KF8107FFC0FI0FF83FE,007IF81CIFE0781IF00F03KF018IFC0E0807F83FE,007IF01JFE0781IF00E07KF03JFC0E0C07F83FE,007IF03JFE0781IF80C07FFC7E03JFC0E0C03F83FE,007IF03JFE0781IF80C0F8003E07JFC0E0E03F83FE,007FFE03JFE0781IF808K03E07JFC0E1E01F83FE,007FFE07JFE0781IF808K03C07JFC0C1F00F83FE,007FFC07JFC0781IF01L03C0KFC0C1F80F83FE,007FFC07JFC0F81IF01L03C0KF81C1F80783FE,007FFC07JFC0F81IF01L07C0KF81C1FC0787FE,007FFC07JF81F81IF0203KFC0KF8181FE0387FE,007FFC07JF81F81FFE0203KF80KF0383FE0187FE,007FFC07JF03F81FFE0603KF80JFE0783FF0187FE,007FFC07IFE03F81FFC0603KF80JFE0703FF8087FE,007FFC07IFE07F81FF80E03KF807IFC0F07FF8007FE,007FFC03IF80FF81FF01E03JFC007IF81E07FFC007FE,007FFC01FFE01FF81F803E01IFEI03FFE01E07FFE00FFE,007FFE007F803F801E007E007FFK0FF807E07FFE00FFE,007FFEL07F8K0FFT0FC0JF00FFE,007IFL0FF8J03FFM06K01FC0JF80FFE,007IF8J03FF8J07FF8K01FK03F00JFC1FFE,007IFCJ0IF8I03IFCK0FF8J0FE00JFE3FFE,007IFEI03IFCI0JFEJ07FFEI03FE01NFE,007JF800JFE007KF8003JF001FFE01NFE,007gSFE03NFE,007gTF03NFE,007gTFC7NFE,007hJFE,007gPFDSFE,007FFEgY07FE,007FFCgY07FE,:007FFEgY07FE,007hJFE,::::007RFE3gLFC7FFE,007FFC001LF00MF8707KFC00LFE00FFE,007FFC001KFE007LF0707KF800LFC00FFE,007FFC001KFE003LF0707KF8007KFC007FE,007FFE003KFC083LF0707KF8007KF8107FE,007IFC1LFC183LF0707KF8307KF8187FE,007IFC1LFC183LF0707KF8307KF81CFFE,007IFC1LFC1C1LF0707KF8107KFC07FFE,007IFC1LFC1C1LF0707KF8007KFC01FFE,007IFC1LFC1C1LF0707KF800LFE00FFE,007IFC1LFC1C1LF0707KF8007LF807FE,007IFC1LFC181LF0707KF8007LFE07FE,007IFC1LFC183LF0707KF8307KF8303FE,007IFC1LFC183LF0307KF8387KF8303FE,007IFC1LFC083LF8007KF8387KF8007FE,007IFC1LFE003LF800LF8387KF8007FE,007IFC1MF007LFC00LF8383KFC00FFE,007IFE1MF80MFE03LFC387KFE01FFE,007hJFE,::::::00hKFE,007hJFC,,::::^FS"
        
        let termsAndConditionsgM0E02jN03,gM04jP02,,::::::J0CC1C70CE70FC18FC1CC60C60C0070E331FF8CC1F0E073FC07F0E18660EE0FE7FC0FC006638630E0FE198E38E39E1CE19I02030E61C60C70DC00187,I018618718671EC18EE30C60C60C0030E61199886198E031840618618C30461CC4CC0C700C318E30608C308618C18E18E308006030E60C60C618600187,J083184102310E10C630460820C003004191818219CC031800218610C304618C0C40C3018218830600C20C618C18E18C20C006031060C60C218600184,K03180300300610C660461820C00300C081830318CC0218002083218184618C0C00C3018018830E00C604618C18610C60E007030060C60C2303I088,K03880300300610C660061821C00300C0C1830318CC0218002083018184618C0C00C3010019030E00C606618C18710C406007030060C21C2703I088,K03890700300320C660061820C00300C0C1830319CE0218802181C3818461CC0C00E701001A030600C606618E18320E406003830060C2083703I0D,K038F07003C03A0EC60060824C003E0C0C18303198EC218802381C38180607C0C00EF01001E030600C406738E181E0EC0600183E060C2083F01I0F,K039F87003E01C0E060068828C00360C0C18303180C6218802181C38188606C0C00C703001F034600C4063B8C181C0E406019836060C68C2703I0F,K039987003601C0C060070830C00330C0C18303180C62180020C0E3818860CC0C00C381001B838600C606018C180C0C40601FC33060C70C2703001B8,K0398C3003300C0C060070830C00330C0C18303180C32180020C071818860CC0C00C1810011838600C606018C180C0C606010C33060C70C23030019C,K0318C3003300C0C060060830C00318C0818303180C22180020C0318188618C0C00C1818019C38610C604018C18080C606I0C31860C70C23030018C,K03184300318080C030060820C0031841818182180C631800208438C110618C0C00C3018018C30630C20C018C18I0E20C020631860C60C61820018C,M082080718I0C010060820C40308I018080180C421840208C384230630C0C00C300C010430630EJ018C18200E3I020630C60C60C208430186,gO06gP0707Y0E07gK0EM018,i0601Y0C03gK02M01,gO04gP04gI01gK02M03,,:::::N0806gK02g018ggX0E0ET02M0607O0607hJ04,gX0802gH0401O0403,h02gV01,,:hM021,hM033,,P06h08hiS03S02gT07,iS01,,::::::ilM03018,liI03018gH03,T04iL08ggW0103018gQ03018,Y08gY02008gQ02008,,::::::J0C18080D8DD80418630E040070CK08CI070CI0118408608D998411860106100C6101DJ08470C20062180CI03J01B3L060C60CI03200172,J0C38180CC9C8C218E30E0C0070C04I08C31870C18C11861860C98984118E0306180C6101D81018470863067180CI0700431I30804061C70C0607304172,J0C001808E0C0831863I0E0030C06I08C20C20C3061184086089818011860106100C60018C30304308C1862180CI0700C103020C0C060C60C060330C03,J0C001C086081819863I0E0030C06I08C60620C6061184086181818011840106100C60018C38600390C1842180C003F61818306060E060C60C060318E03,J0C003C08608181986300160030C07I08C40620C6071184086181818011840106180C60018C386001E181C42180C007311818306060E060C60C0E0318E03,J0C00240860C30198E320130030C03I08CC0620C6031184086281818011860106180C6001CC1C6I0E180C42180C00631181830E0607060C60C0B0311603,J0F80460CC0C30198E3E0230030C038008CC0630C603118618608181C811860186190C6201C84C6I0E180C42198C00631B80830C0613060C60C1B0331303,J0F80460C00C3019CE3E0230030C1B8010CC0630C6031186186081818011866186198C6001C04C6I0E180C4219CC00631B80830C0613060C60C1B8303303,J0CC06E0800C10180E330330030C1F8010CC0630C603118408708181801186310611CC6001C0FE6I0F180C4218CC0063118083060637860C60C3F8303703,J0C40020800C181806330018030C31C010C60620C607018408708181801184310610CC6001808660013180C0218CC0073118183060621860C60C21C306183,J0C600308008181006318008030C20C010C60420C606218408608181801184310610CC60018186700238C180218CC003F618183060641860C60C20C304183,J0C30030800C0C300E308408070C60E020C20C70C30E618408608181822184710611CC6001C103300618C180218CCI0780C103030C40C60C60C40E3041C3,J0E39839C01C06600E30CC0C070EE0E071E19070E198C18E1C61C1C1CEE1CEE3863F9C6301C3071F0E1C221CF199E60070062038198C1EF1EF1E60E70C1C71C,gT060EhQ03838I06gR0C,gT0402hQ03018I02gR08,gT0402hT08,,::::::J0C40C306318401060CI06010C23EK0306108C03E0200C1I01831830260187J0C660CI03E176L080C030C070E30EJ04CJ031860318608C,J0C60C306318030871C0C06030C03B86I030C218C03B8430C38861831830C6018701018660C10C330720CI030CE030C270E30E0601CC030C31860398608C04,J0C308302318060C2100C0703080318EI0300408C0318818C01821831860C6018303030260C204318300CI0604E0708030E30607018C020E01040098800C0E,J0C30830031806062200E070308031CFI0300C00C031D818C03031831860C6018303820260C606318301CI0600F0708030E30607018C060601040058800C0E,J0C3083043180E062I0607070C031CFI0300C00C031981CC03031831860C6018303860060C6063183016I0E00B0F08030E30403018C040701040058I0C0F,J0C7083043180C063400705870C43983I0320C00C031981CC83031831830C6018301860060C6063383016I0E00B0F0C430E30C09818C040701062039I0C03,J0E70830431IC063C00305870C43B838003E0C00C43B181CF830118318307E018304C60060C6063303026I0E0099B0C470C30C0180EC04070106603FI0C13,J0C70810431C0C063C00304890C438138003E0C00C038181CF830118318307E01830CC60060C6063003027I0E009930C470E30C1180EC04070106207FI0C13,J0C38C3043180C062603384D9080381B800330C00C030181IC30318318206601830DE60060C6063003077I0E008B308030E30419C0CC040701040079800C338,J0C38C30031806062302184F10803I0C00338C00C0301818C63031831C20E6018318660060C60630030438006008E308030E30620C0CC0606010400D9800C218,J0C38C308318060C2384184710C03I0C00318600C0300818C61821831820C6018310730060C20430030418007008E308030E30620618C020E01040198C00C00C,J0C30C308318230861840C4630C03860C6030C700C0300C30C3186183183186018730738460C30C3003081CC03008430C270E30E20630C030C41840198C20C40C4,J0EE1C39C71CE19070CC1CE038C63860E6038E380E6380660C30CC38718738603873079F060C19870070C1CC01C0C030C670E70E60770C0198E38F331C671EC0E6,J0DC0833FF8F80E0604C0C4030EC10406603040E0FC3001C0C1070182183206018320307060C0803003080CC00E08030F420C30C60660C0061F7C7A2186IF40E6,O01018gH02iY0180CL0C02,O01008kK04L08,,::kW0118,kgV08Q08hI0CQ0C,gV08Q08hgP08gI04L01804gV0300CK01804,kP01,,:::::J0C008061I0604CJ0618001027042J01061060102L010041042004104004001004I02J04C306306I01J0C840106080991060461,J0C20CC61180618C0630E388218E7066208338630601820860C3384618C300C18418610180E020308604630630610410C00C4C030E30D183870463,J0C3084601C0E18C0418600801883046318030610601821821813806184200C18418600181E060300604630E30630610C00C0C0100205103070463,J0C3086601C0E18C001C601801983046318010610601823031801806184200C184184001C1E060300700630E30630610400C0C0110600103060463,J0C3086601E0E18CI0C601801901886310010E10E01823033801806104200C184384001C1E070300700630E30620710400C0C01106001030E0463,J0C3086600E1E18CI0C601001901886330010E10E01823013801806104200C184386I0E0E0F0300300630E30620310400C0C01006001030E0463,J0C708C7206161CCI0C683001E00906330010610601827013803984104310C18458660060E090300380C30E30660310C00C0C21E0C00103060463,J0C70C07203060ECI0C6C3001E00F07030010610601827013803804184310C18418620070E198301180E30630E60310C00C0C21E0C001030604631,J0C38806003860CCI0C6C3001B00606030018610601827013803804184300C186186I030E198301180630630620310600C040130C0010386046308,J0C38806001C60CCI0C661001B8060603001861C601823013803804184200C186184I03CE31C3010C0738630620310600C0401306001038604630C,J0C38806001C618C001C6618019C0606018018618601823031801806184200C186184I01CE20C3020C0738630620610600C0C01186001038604630C,J0C38806081C618C00186318018CI06018018618601821831C03806184200C184186I018E20C3020C0630630630610600C0C011C600103860C6308,J0C30C060908630C0030630C018E080700C038618601821860C0384618C308C18C18E10108E60E3060E0630630610410C00C0C130C300183873863198,J0C60C061900630C00206186018618070060306106018200406038C618E300C18C18610100E60E306060C30630608018800C0E330418018387306311C,i07iG0C,ijQ0C06Y080C,jQ08gI04,jQ08,,jV084,jV0CCV0118,jV078W0B,,M0C18C10C18CK070C02K098600EI02E8C080C18400183J0C400C711041I01E0038J08718C18C07387I0C4J0801018020C60C,K080E18C30C18C3180071C06102118C630CC104E4E080C18E001870C20CE08C7198630301E003880C0C718C38C07387I0C40406184198060C70C,K0C0C00C10C18C60C007I02186198C618C6380606080C18C0018318308400C7I0640300C0010C0C02700C38C07387I0C00E0408C190060C30C,J01C0C00810C38C60C007I0208C0C0C618C6380606I0C1840018318308400C3I0640300C0010C0C00300C18C06387I0C00E0C018090020C30C,J01C0C00810C38CC06007I0208C0C0C618C6380602100C1840018330188400C3I0680700C0010C0E01200C18C0638F100C00E0C018010021C20C,J0340C00810C58CC06007400219C0C1C630C60C0603100C1840018330188400C3002680580C0010C0601340C18C06387300C01318018010022420C,J0260F80810C98FC06007C003F1C0C387F0EC4C0601200FF87E018330188400C3F03F00C80C001F82201F80FF8FC6386I0F8131801801F82443FC,J0660FC0810C18CC06007C00239C0C1C638E04E0601E00C1840018330188400C3003F808C0C0019C2301FC0C38CC6387I0DC3318018018020430C,J0670CC0810E18CC06007600219C0C0C618C0CE0601E00C1840018330188400C30067818C0C0010E63013C0C18C66387I0CE339C018010030430C,J0430C60810E18CC06007200208C0C0E618C0860600C00C1840018330180400C30066C10C0C001064383360C18C26387I0C6218C018010030430C,J0838C60810C18C60C007300208C080E618C0070600C00C18C0018318310400C70046E1060C001060182360C18C67387I0C6018C01C010030430C,J0818C30C30C18C2080071802186180C618C1030E01800C18C1018318310E30C708C662070C0010C8186730C18C67387100CE40C600C010060C30C,I01C3FE39FF9E39E1B06071C07F03707CFF0E3878E03I0E3CFF03C78FC3FEE1E7F98E7F071E203FDC1EE739C39FC778F301FCC1E3E07C3FC71E70E,Q01CM06gY0707gU018,R0ChM0603gU01,R04hM0401gU01,,::kI062,kI066,kjG0387Q01002,jG02018,,:::::::J0C080208J020C04010100402O01I08002I080040386L08L0801J0180C00801818118P02I08O0106,J0C086218020860C06I1318C060040109003819800718180064387082I0C208201C6398C0380C1180981C31882001041046I0C240820118386,J0C006218060C60C0E010318C06004119880180980071C180064386183I0C318300C3398C03C1C3180180C318C6001042006I0C0C0860018186,J0CI02180E0660C0F010308C06004119080100980071C3C0064386301800C310100C3388C01C1C3180180C218C7001046006I080C0C4001818E,J0CI02180C0660C03010308C060043190801I080071C2C0268386301980C310180C7398C0141C31801806218C700104600610080C0CC0018186,J0C8002188C0660C03010318C060043090C01001800738640268386301980C630180C7398C4162C19801806418CB0010C600630080C0CC0018186,J0F8002188C0660C03810318F8600430B0C010018007784403F8386301800CE30180FE398E6162C1D801803019898019C600730081C0CC0010186,J0F8042180C0660C11810300FE600430B08010018007384603F8386301800C630180EF380C4126C0D801803818198010C600730080C0CC0010186,J0CC042180C0660C11810300C76004319080101180071CC6067C386301800C310180C3380C0134C1980180181819C01066006I080C0CC0010186,J0C4042180E0660C00C10300C76004119080101180070C82066C386381I0C318300C3B00C0138C1980180181830C01066006I0C0C0C600101C6,J0C604218060C60C00C10300C76004119880181180070C030C66386183I0C318300C3380C0118C318018I01820E01063006I0C040860018186,J0C318318231860C40C10300CE600413098018F180471D030C673860C6180C70C201C7380C1318C6180180F018606010C1806080C061830018386,I01E3F873FC1F071EE0E38381FC700E0E0F0038E1C047F183F8E3B8F07C181FE06C01FE380FF301EE1C03C0E03C60F03F81F8FF81C03F01F038387,i018,iG08,,::k031,k03B,k01A,,J033K06218620430180E0100C0808006I0603K032040403I030C03063008200322I0C03N01J08J060C02I0408080018E18C3083083,J033083046118830C30180E2301C18980061006030181832I0E0308030E0306380C202313001C23I04080C188218061861C061806180C0018E18C3183183,J023081806018020C30180E0300C08080061807070181812I0E0180030C03063818200302I0C03I0C080C0902180E0C61C021804080C0018C38C3183083,J023181806018020C30180E0300C080800618070701C3012I0F0190030C030E3C18200302I0C03I0C00180303180C0C61C021804081E0018C38C3187087,J023181806019020C30180E0300C080800618078F01C3002I0300E0031C030E2C38200303I0C03001C00180303180C0E61C02180408160018C58C3187187,J023101C0607D030C30180E0300C080800630058B00C3003600300E0030403062428210303I0C43101800180303180C0661C02380618070018C18C3183183,J023101C0607E030C3A180FC3B0C080D80670018B00E3003E00300E0030403062668330303200CC31018001803011F9C0660C03380618030018C18E7183183,J023101C0607F030C33980E6318C0808C063800D304E3003E01180F0030403062648210303100C0300180018030319DC0660C03180618230018E1867183183,J0631818060D9020C31980E7308C08086061800D30473002300180300304038622C8200302180C03001C0018030318EC0E70C021C0408238018E18071830C3,J043181806099820431980E7308C08086061C006308330021I08018038403862388200302080C03I0C00180103186C0C70C020C0408018018E18031C30C3,J043081086198820C31980E7308C080860618046318318121800C21C030403062388200302180C03I0CI0C018218C60C60C020C0408418018E1803183083,J0830C2386318C30C33980E6319C1818C063804631839C230C40C60C030E0306310C608303381C230806100E008619C71861C06180618C0DE18E1803183183,I01FFC7C30F71C670E7E3C0FC3F1C1C1F80FF00E03B8387870EE0EE1E078E078F701C7F8707E01FE7F803E003C07C1F81E0F1E07F00E1CC1DC3DE3C079C79C38,I0181C,I0100C,L04,,::::::J0220E019C8C0413B38C230C070C118,J0C18C019C8C0C1383042308070C30C,J0C1CC0318060E0303002308030C606,I0181CC0318040E0303002308030CE06,I0180CC01180C030303082308030CE06,I0180CE01981813030398230C030CE02,I0180CEC0D81C13030398230DC30CE02,I0180CC60D80C338303002308E30CE06,I0180CC309806338303002308630CE06,J0C1CC319806018303002308630C606,J0C18C23180E40C303006308630C70C,J0630E671C0C40C3838DC30CC70E1186,M040218J0C1030081I020CI02,,:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::^FS"
        
        if self.printList.count > 0 {
            for i in 0...self.printList.count - 1 {
                if self.printList[i].hotelName?.count ?? 0 > 20 {
                    hotelNameFirstColumn = self.printList[i].hotelName?[1..<20] ?? ""
                    hotelNameScondColumn = self.printList[i].hotelName?.substring(fromIndex: 20) ?? ""
                }else{
                    hotelNameFirstColumn = self.printList[i].hotelName ?? ""
                }
                self.printString = "^XA^PON^LL\(self.addedNumber + 200)^XGMyFormat^FS^CF0,25^FO280,30^FDVoucher No^FS^CF0,25^FO280,60^FD\(self.printList[i].voucherNoTop ?? "")^FS^CF0,25^FO280,90^FDPrint Date : ^FS^CF0,25^FO400,90^FD\(self.printList[i].date ?? "")^FS^FO10,150^GB200,100,0^FS^CF0,25^FO20,170^FDShop Date^FS^FO210,150^GB340,100,0^FS^FO 220, 170 ^A 0, 20 ^FD\(self.printList[i].tourName ?? "")^FS^FO10,250^GB200,60,0^FS^CF0,25^FO20,270^FDPick Up Time^FS^FO210,250^GB340,60,0^FS^FO220, 270 ^A 0, 20 ^FD\(self.printList[i].paxInfo ?? "")^FS^FO10,310^GB200,60,0^FS^CF0,25^FO20,330^FDConcept^FS^FO210,310^GB340,60,0^FS^FO 220, 330 ^A 0, 20 ^FD\(self.printList[i].tourDate ?? "")^FS^FO10,370^GB200,60,0^FS^CF0,25^FO20,390^FDHotel^FS^FO210,370^GB340,60,0^FS^FO 220, 390 ^A 0, 20 ^FDStandart^FS^FO10,430^GB200,60,0^FS^CF0,25^FO20,450^FDRoom^FS^FO210,430^GB340,60,0^FS^FO 220, 450 ^A 0, 20 ^FD\(self.printList[i].transTourist ?? "")^FS^FO10,490^GB200,100,0^FS^CF0,25^FO20,510^FDHotel^FS^FO210,490^GB340,100,0^FS^FO 220, 510 ^A 0, 20 ^FD\(hotelNameFirstColumn)^FS^FO 220, 550 ^A 0, 20 ^FD\(hotelNameScondColumn)^FS^FO10,590^GB200,60,0^FS^CF0,25^FO20,610^FDPax^FS^FO210,590^GB340,60,0^FS^FO 220, 610 ^A 0, 20 ^FD\(self.printList[i].room ?? "")^FS^FO10,650^GB200,60,0^FS^CF0,25^FO20,670^FDPhone^FS^FO210,650^GB340,60,0^FS^FO 220, 670 ^A 0, 20 ^FD\(self.printList[i].pickUpTime ?? "")^FS^FO10,710^GB200,60,0^FS^CF0,25^FO20,730^FDName^FS^FO210,710^GB340,60,0^FS^FO 220, 730 ^A 0, 20 ^FD-^FS^FO10,770^GB200,60,0^FS^CF0,25^FO20,790^FDOperator^FS^FO210,770^GB340,60,0^FS^FO 220, 790 ^A 0, 20 ^FD\(self.printList[i].paxName ?? "")^FS^FO10,830^GB200,60,0^FS^CF0,25^FO20,850^FDOperator^FS^FO210,830^GB340,60,0^FS^FO 220, 850 ^A 0, 20 ^FD\(self.printList[i].operatorName ?? "")^FS\(odeonLabel)^XZ"
              //  self.printListStringType.append(printString)
                sendStrToPrinter(self.printString, connection: connection)
            }
        }
    }
}


